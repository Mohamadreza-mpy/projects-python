from tkinter import *
import backend



def clear_list():
    list1.delete(0, END)


def fill_list(movies):
    for movie in movies:
        list1.insert(END, movie)


def clear_list_love():
    list2.delete(0, END)

def fill_love(loves):
    for love in loves:
        list2.insert(END,love)





window = Tk()
window.title("Movie Store")
window.resizable(width=False,height=False)

#window.configure(bg=color)
# ===================== Labels ========================
l1 = Label(window, text="Name")
l1.grid(row=0, column=0)

l2 = Label(window, text="Score")
l2.grid(row=0, column=2)

l3 = Label(window, text="Genre")
l3.grid(row=1, column=0)

l4 = Label(window, text="Year")
l4.grid(row=1, column=2)

# ===================== Entries ========================

name_text = StringVar()
e1 = Entry(window, textvariable=name_text,bg='Gray')
e1.grid(row=0, column=1)

score_text = StringVar()
e2 = Entry(window, textvariable=score_text,bg='Gray')
e2.grid(row=0, column=3)

janer_text = StringVar()
e3 = Entry(window, textvariable=janer_text,bg='Gray')
e3.grid(row=1, column=1)

yare_text = StringVar()
e4 = Entry(window, textvariable=yare_text,bg='Gray')
e4.grid(row=1, column=3)


#=================listbox============
list1 = Listbox(window, width=35, height=6)
list1.grid(row=2, column=0, rowspan=6, columnspan=2)

sb1 = Scrollbar(window)
sb1.grid(row=2, column=2, rowspan=6)

list1.configure(yscrollcommand=sb1.set)
sb1.configure(command=list1.yview)

sb2=Scrollbar(window)
sb2.grid(row=8,column=2,rowspan=6)
list2 = Listbox(window, width=35, height=6,)
list2.grid(row=8, column=0, rowspan=6, columnspan=2)


list2.configure(yscrollcommand=sb2.set)
sb2.configure(command=list2.yview)

def get_selected_row(event):
    global selected_movie
    global get_selected_love
    if len(list1.curselection()) > 0:
        index = list1.curselection()[0]
        selected_movie = list1.get(index)
        # name
        e1.delete(0, END)
        e1.insert(END, selected_movie[1])
        # score
        e2.delete(0, END)
        e2.insert(END, selected_movie[2])
        # janer
        e3.delete(0, END)
        e3.insert(END, selected_movie[3])
        # yare
        e4.delete(0, END)
        e4.insert(END, selected_movie[4])
#================================
def get_selected_love(event):
    global selected_love

    if len(list2.curselection()) > 0:
        index = list2.curselection()[0]
        selected_love = list2.get(index)
        # name
        e5.delete(0, END)
        e5.insert(END, selected_love[1])
        # # score
        # e5.delete(0, END)
        # e5.insert(END, selected_love[2])
        # # # janer
        # e5.delete(0, END)
        # e5.insert(END, selected_love[3])
        # # # yare
        # e5.delete(0, END)
        # e5.insert(END, selected_love[4])






list1.bind("<<ListboxSelect>>", get_selected_row)
list2.bind("<<ListboxSelect>>", get_selected_love)

#=====================button===============================
def view_command():
    clear_list()
    movies = backend.view()
    fill_list(movies)


b1 = Button(window, text="View All", width=12, bg='Gray',command=lambda: view_command())
b1.grid(row=2, column=3)


def search_command():
    clear_list()
    movies = backend.search(name_text.get(), score_text.get(), janer_text.get(), yare_text.get())
    fill_list(movies)
    

b2 = Button(window, text="Search Movie", width=12, bg='Gray',command=search_command)
b2.grid(row=6, column=3)


def add_command():
    backend.insert(name_text.get(), score_text.get(), janer_text.get(), yare_text.get())
    view_command()


b3 = Button(window, text="Add Movie", width=12, bg='Gray',command=lambda: add_command())
b3.grid(row=3, column=3)


def update_command():
    backend.update(selected_movie[0], name_text.get(), score_text.get(), janer_text.get(), yare_text.get())
    view_command()


b4 = Button(window, text="Update Selected", width=12,bg='Gray' ,command=update_command)
b4.grid(row=4, column=3)


def delete_command():
    backend.delete(selected_movie[0])
    view_command()

b5 = Button(window, text="Delete Selected", width=12, bg='Gray',command=delete_command)
b5.grid(row=5,column=3)

def delete_love():
    backend.delete_loves(selected_love[0])
    view_command()



delete_text = StringVar()
e5 = Entry(window, textvariable=delete_text)
e5.grid(row=7, column=1)
b9=Button(window,text="Delete Favorites",width=12,bg='Gray',command = delete_love)
b9.grid(row=7,column=0)






def add_favorites():
    backend.inlove(selected_movie[1],selected_movie[2],selected_movie[3],selected_movie[4])
    view_command()

b7=Button(window, text="Add to Favorites", width=12, bg='Gray',command = lambda:add_favorites())
b7.grid(row=7,column=3)






def all_Favorites():
    clear_list_love()
    loves = backend.view_love()
    fill_love(loves)

b8=Button(window,text="All Favorites",width=12,bg='Gray',command = lambda:all_Favorites())
b8.grid(row=8,column=3)












b6 = Button(window, text="Close", width=12, bg='Gray',command=window.destroy)
b6.grid(row=9, column=3)
view_command()
window.mainloop()
